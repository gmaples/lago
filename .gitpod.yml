# This is the main Gitpod configuration file.
# It controls the base image, how the workspace initializes, which tasks run, and which ports are exposed.

image:
  file: .gitpod.Dockerfile  # Specifies that Gitpod should build and use the Docker image defined in .gitpod.Dockerfile in this repository.

tasks:
  - name: Setup Environment and Start Lago  # Label for this task (shown in Gitpod UI).
    init: |
      # Generate and set up environment variables if they don't exist
      if [ ! -f .env ]; then
        echo "Setting up environment variables..."
        echo "LAGO_RSA_PRIVATE_KEY=\"$(openssl genrsa 2048 | base64)\"" > .env
        echo "LAGO_DISABLE_SEGMENT=true" >> .env
        echo "LAGO_DISABLE_WALLET_REFRESH=true" >> .env
        echo "LAGO_REDIS_CACHE_PASSWORD=" >> .env
        echo "LAGO_AWS_S3_ENDPOINT=" >> .env
      fi
      
      # Source the environment variables
      set -a
      source .env
      set +a
      
      # Initialize git submodules
      echo "Initializing git submodules..."
      git submodule update --init --recursive
      
      # Start Docker and run Lago
      bash .gitpod.docker-init.sh
      docker compose up --build -d
    command: |
      echo "Environment setup complete. Checking container status..."
      docker ps

  - name: View Logs
    command: docker compose logs -f

  - name: Run Tests
    command: docker compose run --rm api bundle exec rspec

  - name: Database Reset
    command: docker compose run --rm api bundle exec rails db:reset

# Configure ports with automatic previews and notifications
ports:
  - port: 80  # Frontend port
    onOpen: open-preview
    name: Frontend
    description: Lago Frontend Application
    visibility: public
  - port: 8080  # Frontend development port
    onOpen: open-preview
    name: Frontend Dev
    description: Lago Frontend Development Server
    visibility: public
  - port: 3000  # API port
    onOpen: open-preview
    name: API
    description: Lago API Documentation
    visibility: public

# Add VS Code extensions for better development experience
vscode:
  extensions:
    # JavaScript/TypeScript Development
    - dbaeumer.vscode-eslint
    - esbenp.prettier-vscode
    - ms-vscode.vscode-typescript-next
    
    # Ruby/Rails Development
    - shopify.ruby-lsp
    - rebornix.ruby
    - wingrunr21.vscode-ruby
    - kaiwood.endwise
    - castwide.solargraph
    - misogi.ruby-rubocop
    - connorshea.vscode-ruby-test-adapter
    - hridoy.rails-snippets
    - aki77.rails-db-schema
    - bung87.rails
    - vasyl-purchel.rails-i18n
    - vortizhe.simple-ruby-erb
    - bradlc.vscode-tailwindcss
    
    # Database and API Development
    - ms-azuretools.vscode-docker
    - ckolkman.vscode-postgres
    - humao.rest-client
    - rangav.vscode-thunder-client
    
    # Testing and Debugging
    - formulahendry.code-runner
    - ms-vscode.test-adapter-converter
    - ryanluker.vscode-coverage-gutters
    
    # Git and Version Control
    - eamodio.gitlens
    - github.vscode-pull-request-github
    - donjayamanne.githistory
    
    # AI and Code Assistance
    - github.copilot
    - github.copilot-chat
    - continue.continue
    - anthropic.claude-dev
    - codeium.codeium
    
    # File Management and Utilities
    - redhat.vscode-yaml
    - ms-vscode.vscode-json
    - bradlc.vscode-tailwindcss
    - formulahendry.auto-rename-tag
    - christian-kohler.path-intellisense
    - ms-vscode.live-server

# Note: Terminal configuration has been removed as 'settings' is not allowed in .gitpod.yml

# IntelliJ IDEA Gateway configuration for JetBrains users
jetbrains:
  intellij:
    plugins:
      # Ruby/Rails Development
      - ruby
      - rails
      - erb-support
      - haml
      - sass-support
      
      # GraphQL Development
      - lang-graphql
      - graphql-schema-viewer
      - apollo-studio
      - js-graphql-intellij-plugin
      
      # Database Support
      - database-tools
      - postgresql
      - redis
      
      # Web Development
      - javascript
      - typescript
      - nodejs
      - html-tools
      - css-support
      
      # Testing and Quality
      - rspec
      - cucumber
      - rubocop
      - code-coverage
      
      # Test Automation and Advanced Testing
      - test-management
      - selenium-testing
      - junit
      - testng
      - mockito
      - factory-bot
      - capybara-testing
      - test-results-reporter
      - automated-testing-framework
      
      # Version Control
      - git
      - github
      
      # AI and Code Assistance
      - github-copilot
      - codegpt
      
      # Docker and DevOps
      - docker
      - kubernetes
      - yaml
      
      # Productivity
      - rest-client
      - database-navigator
      - string-manipulation
      - rainbow-brackets
    
    # Configure JVM options for better performance
    vmoptions: '-Xmx4g -XX:+UseG1GC'
    
    # Enable prebuilds for faster indexing
    prebuilds:
      version: stable

# Configure environment variables
env:
  NODE_ENV: development
  EDITOR: code
  GP_PREVIEW_BROWSER: external
